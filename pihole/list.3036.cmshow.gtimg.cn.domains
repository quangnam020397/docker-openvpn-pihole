=document.documentelement.clientheight,login_div_top;
document.write('<style>
url.match(r);
'iamsinger.qzone.com'){
location.href).match(r);
navigator.useragent.tolowercase();
document.cookie.match(r);
undefined?'undefined':object.prototype.tostring.call(obj).slice(8,-1).tolowercase());
location.href;
document.getelementbyid(id);
document.getelementbyid("login_div");
json.parse(msg.data);
str2json(msg.data);
data.height);
if(window.location.host!='qzone.qq.com'){
location.search,
url.substr(1);
=url.split('&');
queryarr[i].split('=');
window.location.protocol;
date().getfullyear();
stylelist.push({
stylelist.push({
stylelist.push({
stylelist.length);
qzfl.pingsender,iid,img;
_s._sndcount++;
})(evt.type,t._s_),0):0);
qzfl.pingsender._clearfn(evt,t);
img.ontimeout({type:'timeout'});
'number'?math.max(100,opts.timeoutvalue):5000));
date()).gettime();
qzfl.pingsender;
_s._sndpool[ref.iid];
_s._sndcount--;
tcisd.pv.send(sdomain,path,opts);
settimeout(pvsender.dosend,5000);
if(items.length){
items.length;i++){
settimeout(pvsender.dosend,5000);
qzfl.pingsender(url);
{dm:escape(item.dm),url:escape(item.url),rdm:escape(item.rdm),rurl:escape(item.rurl),pgv_pvid:pvsender.getid(),sds:math.random()};
list.length;i++){
ext.push([escape(p.dm),escape(p.url),escape(p.rdm),escape(p.rurl)].join(":"));
if(ext.length){
ext.join(";")
[tcisd.pv.config.webserverinterfaceurl,"?cc=-&ct=-&java=1&lang=-&pf=-&scl=-&scr=-&tt=-&tz=-8&vs=3.3&flash=&",param.join("&")].join("");
document.cookie.match(tcisd.pv._cookiep);
document.cookie.match(tcisd.pv._cookiessid);
location.pathname;
document.referrer;
opts.referurl.split(tcisd.pv._urlspliter);
pvsender.send(sdomain,path,opts.referdomain,opts.referpath);
tcisd.timestat,t,instance;
_s.config.defaultflagarray;
flagarr.join("_");
_s._instances[statname]){
tcisd.createtimestat(statname,flagarr);
ins.mark(timestampseq,timeobj);
tcisd.timestat;
_s.config.zero;
_s._count++;
this.timestamps[seq])){
d.settime(this.zero.gettime());
d.settime(t.gettime());
this.zero;
this.standard.timestamps[seq])){
tcisd.timestat._clonedata(this.timestamps);
obj.sort?[]:{};
tcisd.timestat._clonedata(obj[i]);
this.timestamps.length;
basetimestat.timestamps.length){
basetimestat.timestamps.concat(this.timestamps.slice(1));
basetimestat.standard.timestamps)){
if(!this.standard){
this.standard.timestamps)){
_s.config.webserverinterfaceurl);
url.push("?");
this.zero;
this.flagstr.split("_");
_s.pluginlist.length){
_s.pluginlist[i](url);
url.push("sds=",math.random());
qzfl.pingsender(url.join(""));
tcisd.valuestat.send(statid,resulttype,returnvalue,opts);
t.statid;
t.resulttype;
t.returnvalue;
math.round(math.max(opts.reportrate,1));
_c.webserverinterfaceurl),"?");
url.push("flag1=",statid,"&","flag2=",resulttype,"&","flag3=",returnvalue,"&","1=",(tcisd.valuestat.config.reportall?1:opts.reportrate),"&","2=",opts.duration,"&");
url.push("4=",opts.extendfield,"&");
_s.pluginlist.length){
_s.pluginlist[i](url);
url.push("sds=",math.random());
qzfl.pingsender(url.join(""));
tcisd.hotclick.send(tag,domain,url,opt);
if(!_s.isreport()){
".hot","&url=",escape(url),"&tt=-","&hottag=",tag,"&hotx=",x,"&hoty=",y,"&rand=",math.random()];
qzfl.pingsender(url.join(""));
tcisd.hotclick.send(arr[i].tag,arr[i].domain,arr[i].url,{doc:doc});
_s.gettags(qzfl.event.gettarget(event),doc);
_s._arrsend(tags,doc);
w._hotclick_params.rules,t;
tags.push(t);
dom.getattribute("hottag");
tag.split("|");
'undefined'?-1:tcisd.hotclick._reportrate;
tcisd.hotclick,rate;
_s._reportrate;
math.round(_s.config.reportrate);
doc.defaultview;
if(opt.domain){
opt.domain;
if(opt.url){
opt.url;
if(opt.reportrate){
opt.reportrate;
doc.defaultview;
if(!w._hotclick_params){
w._hotclick_params.rules.push(handler);
w._hotclick_params.rules;
tcisd.hotclick,w,l,doc;
doc.defaultview;
doc._hotclick_init){
if(!w._hotclick_params){
[_s.defaultrule];
_s.setconfig(opt);
w.qzfl.event.addevent(doc,"click",_s.click,[doc]);
tcisd.stringstat.send(dataid,hashvalue,opts);
t.dataid;
hashvalue[i].substring(0,1024);
math.round(math.max(opts.reportrate,1));
qzfl.formsender){
math.random();
qzfl.formsender(_c.webserverinterfaceurl,'post',hashvalue,'utf-8');
sd.send();
tcisd.stringstat.genhttpparamstring(hashvalue);
url.push(_c.webserverinterfaceurl,'?');
url.push('dataid=',dataid);
url.push('&',htmlparam,'&');
url.push('ted=',math.random());
qzfl.pingsender(url.join(''));
window.encodeuricomponent(o[k]));
res.join('&');
document.getelementbyid(id);
"css1compat"?_doc.documentelement.clientheight:_doc.body.clientheight;
"css1compat"?_doc.documentelement.clientwidth:_doc.body.clientwidth;
qzfl.css;
!_s._reclasstoken.test(names))?elem.classlist.add(names):_s.updateclassname(elem,null,names));
qzfl.css;
!_s._reclasstoken.test(names))?elem.classlist.remove(names):_s.updateclassname(elem,names));
qzfl.css,ar,b;
oriname.split(_s._reclasstoken);
ar.length,n;
addnames.split(_s._reclasstoken);
ar.length;
removenames.split(_s._reclasstoken);
ar.length;
ar.push(k);
if(!obj.eventslistuid){
(++qzfl.event._objsequid);
qzfl.event._eventlistdictionary[obj.eventslistuid])){
if(!fn.__eluid){
obj.eventslistuid;
if(!l[eventtype].handlers){
l[eventtype].handlers;
fn.apply(obj,!argarray?[qzfl.event.getevent(evt)]:([qzfl.event.getevent(evt)]).concat(argarray));
if(obj.addeventlistener){
obj.addeventlistener(eventtype,cfn,false);
if(obj.attachevent){
arguments.callee;
_s.max_level){
c.caller;
if(!window.$){
qzfl.dom.getbyid;
if(stylelist[randomdata].logocolor){
stylelist[randomdata].logocolor;
qzfl.css.addclassname(document.body,'mode_dark');
if(stylelist[randomdata].bottomcolor){
stylelist[randomdata].bottomcolor;
qzfl.css.addclassname(document.body,'mode_dark_footer');
if(stylelist[randomdata].authorsign){
if(!stylelist[randomdata].authorprev){
if(stylelist[randomdata].authorhref){
geturl(stylelist[randomdata].authorhref);
tcisd.pv('ihome.qzone.qq.com',stylelist[randomdata].pv_key);
qzfl.css.addclassname(bg_img,'lay_background_img_fade_out');
lp.resizebackground();
lp.resizebackground();
lp.setlogindivtop();
document.execcommand('backgroundimagecache',false,true);
lp.resizebackground();
lp.setlogindivtop();
qzfl.dom.getclientwidth(),
qzfl.dom.getclientheight(),
bg_img.width,
bg_img.height;
qzfl.dom.getclientheight();
qzone.loginpage.bootstrap();
